@model WebApplication1.Models.Localization.User.UserAddCompositeViewModel

@{
    ViewBag.Title = @Model.AddViewModel.AddOperation;
}

<h2>@Model.AddViewModel.AddOperation</h2>

@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "myForm" }))
{
    @Html.AntiForgeryToken()
<div class="form-horizontal">
    <h4>@Model.AddViewModel.User</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group">
        @Html.LabelFor(model => model.User.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.User.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.User.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.User.Surname, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.User.Surname, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.User.Surname, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.User.Age, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.User.Age, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.User.Age, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.User.Email, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.User.Email, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.User.Email, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.User.Address, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.User.Address, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.User.Address, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.User.Country.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.User.Country.Name,
                (SelectList)ViewBag.CountriesSelectList,
                "Select a country",
                new { @class = "form-control", @id = "countryDropdown" })
            @Html.ValidationMessageFor(model => model.User.Country.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="button" value=@Model.AddViewModel.Create class="btn btn-default" onclick="submitForm()" />
        </div>
    </div>
</div>
}

@Html.ActionLink(@Model.AddViewModel.Back, "User")

@section Scripts {
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script type="text/javascript">
    function submitForm() {
        var form = $('#myForm');
        $.ajax({
            url: '@Url.Action("AddUser", "User")',
            type: 'POST',
            data: form.serialize(),
            success: function(response) {
                if (response.success) {
                    alert('@Model.AddViewModel.SuccessfulAdding');
                    window.location.href = '@Url.Action("User", "User")';
                } else {
                    var errorMessages = response.errors.join('\n');
                    alert('@Model.AddViewModel.ErrorOccured\n' + errorMessages);
                }
            },
            error: function(xhr, status, error) {
                alert('@Model.AddViewModel.ErrorOccured ' + error);
            }
        });
    }
    </script>
}
